
package viaggi;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ViaggioEJB", targetNamespace = "http://viaggi/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ViaggioEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns viaggi.Viaggio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerId", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerId")
    @ResponseWrapper(localName = "trovaPerIdResponse", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerIdResponse")
    @Action(input = "http://viaggi/ViaggioEJB/trovaPerIdRequest", output = "http://viaggi/ViaggioEJB/trovaPerIdResponse")
    public Viaggio trovaPerId(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "aggiorna", targetNamespace = "http://viaggi/", className = "viaggi.Aggiorna")
    @ResponseWrapper(localName = "aggiornaResponse", targetNamespace = "http://viaggi/", className = "viaggi.AggiornaResponse")
    @Action(input = "http://viaggi/ViaggioEJB/aggiornaRequest", output = "http://viaggi/ViaggioEJB/aggiornaResponse")
    public void aggiorna(
        @WebParam(name = "arg0", targetNamespace = "")
        Viaggio arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "elimina", targetNamespace = "http://viaggi/", className = "viaggi.Elimina")
    @ResponseWrapper(localName = "eliminaResponse", targetNamespace = "http://viaggi/", className = "viaggi.EliminaResponse")
    @Action(input = "http://viaggi/ViaggioEJB/eliminaRequest", output = "http://viaggi/ViaggioEJB/eliminaResponse")
    public void elimina(
        @WebParam(name = "arg0", targetNamespace = "")
        Viaggio arg0);

    /**
     * 
     * @return
     *     returns java.util.List<viaggi.Viaggio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaTutti", targetNamespace = "http://viaggi/", className = "viaggi.TrovaTutti")
    @ResponseWrapper(localName = "trovaTuttiResponse", targetNamespace = "http://viaggi/", className = "viaggi.TrovaTuttiResponse")
    @Action(input = "http://viaggi/ViaggioEJB/trovaTuttiRequest", output = "http://viaggi/ViaggioEJB/trovaTuttiResponse")
    public List<Viaggio> trovaTutti();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "crea", targetNamespace = "http://viaggi/", className = "viaggi.Crea")
    @ResponseWrapper(localName = "creaResponse", targetNamespace = "http://viaggi/", className = "viaggi.CreaResponse")
    @Action(input = "http://viaggi/ViaggioEJB/creaRequest", output = "http://viaggi/ViaggioEJB/creaResponse")
    public void crea(
        @WebParam(name = "arg0", targetNamespace = "")
        Viaggio arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<viaggi.Viaggio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerPrezzo", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerPrezzo")
    @ResponseWrapper(localName = "trovaPerPrezzoResponse", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerPrezzoResponse")
    @Action(input = "http://viaggi/ViaggioEJB/trovaPerPrezzoRequest", output = "http://viaggi/ViaggioEJB/trovaPerPrezzoResponse")
    public List<Viaggio> trovaPerPrezzo(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<viaggi.Viaggio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerCategoria", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerCategoria")
    @ResponseWrapper(localName = "trovaPerCategoriaResponse", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerCategoriaResponse")
    @Action(input = "http://viaggi/ViaggioEJB/trovaPerCategoriaRequest", output = "http://viaggi/ViaggioEJB/trovaPerCategoriaResponse")
    public List<Viaggio> trovaPerCategoria(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<viaggi.Viaggio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "trovaPerDestinazione", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerDestinazione")
    @ResponseWrapper(localName = "trovaPerDestinazioneResponse", targetNamespace = "http://viaggi/", className = "viaggi.TrovaPerDestinazioneResponse")
    @Action(input = "http://viaggi/ViaggioEJB/trovaPerDestinazioneRequest", output = "http://viaggi/ViaggioEJB/trovaPerDestinazioneResponse")
    public List<Viaggio> trovaPerDestinazione(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
